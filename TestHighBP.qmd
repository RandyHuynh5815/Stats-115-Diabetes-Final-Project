---
title: "TestHighBP"
author: "Emily Truong"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(dev = 'pdf')
```

<<<<<<< HEAD
```{r echo=FALSE, message=FALSE}
=======
``` {r echo=FALSE, message=FALSE}
>>>>>>> 186f3b737bd877447f8c7ad515b4d974656ea607
library(bayesrules)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(tidybayes)
library(broom.mixed)
library(forcats)
library(dplyr)
```

```{r}
diabetes <- read.csv("./data/binary_diabetes.csv", header=TRUE)
cols <- c("Diabetes_binary","HighBP","HighChol","CholCheck","Smoker","Stroke","HeartDiseaseorAttack","PhysActivity","Fruits","Veggies","HvyAlcoholConsump","AnyHealthcare","NoDocbcCost","DiffWalk","Sex")
diabetes[cols] <- lapply(diabetes[cols], factor)
```

```{r}
diabetes_sample <- diabetes %>%
  sample_n(size=10000)
```

### Informative Prior

```{r}
# Prior Model
diabetes_highBP_prior <- stan_glm(Diabetes_binary ~ HighBP,
                               data = diabetes_sample,
                               family = binomial,
                               prior_intercept = normal(-1.7585, 0.1273),
                               prior = normal(0.17609, 0.02715),
                               chains = 4, iter = 5000*2, seed = 84735,
                               prior_PD = TRUE)
```

```{r}
set.seed(84735)

# Plot 100 Prior Models With Humidity
diabetes_sample %>% 
  add_fitted_draws(diabetes_highBP_prior, n = 100) %>%
  ggplot(aes(x = HighBP, y = Diabetes_binary)) +
    geom_line(aes(y = .value, group = .draw), linewidth = 0.1)

# Plot Observed Proportion of Rain in 100 Prior Datasets
diabetes_sample %>% 
  add_predicted_draws(diabetes_highBP_prior, n = 100) %>% 
  group_by(.draw) %>% 
  summarize(proportion_diabetes = mean(.prediction == 1)) %>% 
  ggplot(aes(x = proportion_diabetes)) +
    geom_histogram(color = "white")
```

### Update Posterior

```{r}
diabetes_highBP_post <- update(diabetes_highBP_prior, prior_PD = FALSE)
```

```{r}
mcmc_trace(diabetes_highBP_post, size=0.1)
mcmc_dens_overlay(diabetes_highBP_post)
mcmc_acf(diabetes_highBP_post, lags = 100)
```

```{r}
# Posterior Summary Statistics
tidy(diabetes_highBP_post, effects = c("fixed", "aux"),
     conf.int = TRUE, conf.level = 0.80) %>% 
  select(-std.error)
```

```{r}
exp(posterior_interval(diabetes_highBP_post, prob = 0.80))
```

## Posterior Evaluation

```{r}
diabetes_rain <- function(x){mean(x == 1)}
pp_check(diabetes_highBP_post, nreps = 100,
         plotfun = "stat", stat = "diabetes_rain") + 
  xlab("probability of diabetes")
```

```{r}
classification_summary(model = diabetes_highBP_post, data = diabetes_sample, cutoff = 0.15)
```

```{r}
set.seed(84735)

cv_accuracy <- classification_summary_cv(
  model = diabetes_highBP_post, data = diabetes_sample, cutoff = 0.5, k = 10)
cv_accuracy$cv
```

```{r}
set.seed(84735)

cv_accuracy <- classification_summary_cv(
  model = diabetes_highBP_post, data = diabetes_sample, cutoff = 0.45, k = 10)
cv_accuracy$cv
```
