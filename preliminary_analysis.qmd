---
title: "STATS115_preliminary_analysis"
author: "Seiya Uno"
format: pdf
editor: visual
---

## Preliminary Analysis
```{r setup, include=FALSE}
knitr::opts_chunk$set(dev = 'pdf')
```

``` {r echo=FALSE, message=FALSE}
library(bayesrules)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(tidybayes)
library(broom.mixed)
library(forcats)
library(dplyr)
library(Hmisc)
library(corrplot)

RANDOM_STATE = 84735
```

```{r}
df <- read.csv("./data/binary_diabetes.csv")
sample_n(df, 5)
nrow(df)
```

```{r}
cols <- c("Diabetes_binary","HighBP","HighChol","CholCheck","Smoker","Stroke","HeartDiseaseorAttack","PhysActivity","Fruits","Veggies","HvyAlcoholConsump","AnyHealthcare","NoDocbcCost","DiffWalk","Sex")
df[cols] <- lapply(df[cols], factor) 
```


```{r}
ggplot(df, aes(x=Diabetes_binary)) +
  geom_bar() +
  theme_light() +
  labs(title="Diabetes")

ggplot(df, aes(x=HighBP, fill=Diabetes_binary, group=Diabetes_binary)) +
  geom_bar() +
  theme_light() +
  labs(title="Diabetes and HighBP", x="HighBP",
       fill="Diabetes")
```

```{r fig.height=7, fig.width=7, dpi=500}
cor_mtx <- cor(df)
#corrplot(cor_mtx, type="upper", order = "hclust", tl.cex = 0.6, )
```
It seems that BMI, DiffWalk, GenHealth, PhysHealth, HighCol, HighBP, Age, and HeartDiseaseAttack are positively correlated with Diabetes_binary.  DiffWalk, GenHealth, and PhysHealth are correlated with each other; hence we may not need all of them.

For negative correlations, PhysActivity, Education, and Income seem more significant than other variables.

```{r}
ggplot(df, aes(x=BMI, fill=Diabetes_binary, group=Diabetes_binary)) +
  geom_bar(position = "fill") +
  theme_light() +
  labs(title="Diabetes and HighBP", x="BMI",
       fill="Diabetes")

diabetes_rate_df <- df %>% group_by(BMI) %>% 
                      summarise(diabetes_rate = mean(Diabetes_binary==1))
                      
ggplot(diabetes_rate_df, aes(x=BMI, y=diabetes_rate)) +
  geom_point() +
  theme_light() +
  labs(title="Diabetes rate per BMI group", x="BMI")
```


### Weakly informative Prior (Default prior model)
We fit model using rstanarm's default priors
prior_PD = TRUE to simulate prior.
```{r}
diabetes_model_def_PD <- stan_glm(Diabetes_binary ~ HighBP,
                               data = df,
                               family = binomial,
                               prior_intercept = normal(100, 5, autoscale=TRUE),
                               prior = normal(0, 2.5, autoscale=TRUE),
                               chains = 4, iter = 5000*2,
                               seed = RANDOM_STATE,
                               prior_PD = TRUE, refresh=FALSE)
prior_summary(diabetes_model_def_PD)
```

The simulation seems to be OK.

```{r}
df %>% 
  add_predicted_draws(diabetes_model_def_PD, n = 100) %>% 
  filter(.prediction != 1)
```

## Model using default prior
Using subset of data since it takes very long time to fit the model with full dataset.
```{r}
set.seed(RANDOM_STATE)
sub_df <- sample_frac(df, 0.2)
nrow(sub_df)
```
HighBP
```{r}
diabetes_model_def_base <- stan_glm(Diabetes_binary ~ HighBP,
                               data = df,
                               family = binomial,
                               prior_intercept = normal(100, 5),
                               prior = normal(0, 2.5),
                               chains = 4, iter = 5000*2,
                               seed = RANDOM_STATE,
                               prior_PD = FALSE, refresh=FALSE)
mcmc_trace(diabetes_model_def_base, size=0.1)
mcmc_dens_overlay(diabetes_model_def_base)
mcmc_acf(diabetes_model_def_base, lags = 100)
```



```{r}
posterior_interval(diabetes_model_def_base, prob = 0.80)
exp(posterior_interval(diabetes_model_def_base, prob = 0.80))
```
HighChol 
```{r}
diabetes_model_def_HighChol <- stan_glm(Diabetes_binary ~ HighChol,
                               data = sub_df,
                               family = binomial,
                               prior_intercept = normal(100, 5),
                               prior = normal(0, 2.5),
                               chains = 4, iter = 5000*2,
                               seed = RANDOM_STATE,
                               prior_PD = FALSE, refresh=FALSE)
mcmc_trace(diabetes_model_def_HighChol, size=0.1)
mcmc_dens_overlay(diabetes_model_def_HighChol)
mcmc_acf(diabetes_model_def_HighChol, lags = 100)
```

```{r}
posterior_interval(diabetes_model_def_HighChol, prob = 0.80)
exp(posterior_interval(diabetes_model_def_HighChol, prob = 0.80))
```

PhysActivity
```{r}
diabetes_model_def_PhysActivity  <- stan_glm(Diabetes_binary ~ PhysActivity,
                               data = sub_df,
                               family = binomial,
                               prior_intercept = normal(100, 5),
                               prior = normal(0, 2.5),
                               chains = 4, iter = 5000*2,
                               seed = RANDOM_STATE,
                               prior_PD = FALSE, refresh=FALSE)
mcmc_trace(diabetes_model_def_PhysActivity, size=0.1)
mcmc_dens_overlay(diabetes_model_def_PhysActivity)
mcmc_acf(diabetes_model_def_PhysActivity, lags = 100)
```

```{r}
posterior_interval(diabetes_model_def_PhysActivity, prob = 0.80)
exp(posterior_interval(diabetes_model_def_PhysActivity, prob = 0.80))
```


GenHlth
```{r}
diabetes_model_def_Genhealth  <- stan_glm(Diabetes_binary ~ GenHlth,
                               data = sub_df,
                               family = binomial,
                               prior_intercept = normal(100, 5),
                               prior = normal(0, 2.5),
                               chains = 4, iter = 5000*2,
                               seed = RANDOM_STATE,
                               prior_PD = FALSE, refresh=FALSE)
mcmc_trace(diabetes_model_def_Genhealth, size=0.1)
mcmc_dens_overlay(diabetes_model_def_Genhealth)
mcmc_acf(diabetes_model_def_Genhealth, lags = 100)
```

```{r}
posterior_interval(diabetes_model_def_Genhealth, prob = 0.80)
exp(posterior_interval(diabetes_model_def_Genhealth, prob = 0.80))
```


## Informative prior
physactivity
```{r}
diabetes_model_def_phys <- stan_glm(Diabetes_binary ~ PhysActivity,
                               data = df,
                               family = binomial,
                               prior_intercept = normal(-1.7585, 0.1273, autoscale = FALSE),
                               prior = normal(-2.4511, 0.1178, autoscale = FALSE),
                               chains = 4, iter = 5000*2,
                               seed = RANDOM_STATE,
                               prior_PD = FALSE, refresh=FALSE)
mcmc_trace(diabetes_model_def_phys, size=0.1)
mcmc_dens_overlay(diabetes_model_def_phys)
mcmc_acf(diabetes_model_def_phys, lags = 100)
```


